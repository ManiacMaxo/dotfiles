# Configuration for Alacritty, the GPU enhanced terminal emulator

# Any items in the `env` entry below will be added as
# environment variables. Some entries may override variables
# set by alacritty it self.

window:
    dimensions:
        columns: 150
        lines: 50

    # Window padding (changes require restart)
    #
    # Blank space added around the window in pixels. This padding is not scaled by
    # DPI and the specified value is always added at both opposing sides.
    padding:
        x: 0
        y: 0

    # Spread additional padding evenly around the terminal content.
    dynamic_padding: false

    # Window decorations
    #
    # Available values:
    # - full: borders and title bar
    # - none: neither borders nor title bar
    # - transparent: title bar, transparent background and title bar buttons
    # - buttonless: title bar, transparent background, but no title bar buttons
    decorations: full

    #   - Windowed
    #   - Maximized
    #   - Fullscreen
    #   - SimpleFullscreen
    startup_mode: Windowed

scrolling:
    history: 10000
    multiplier: 2

font:
    normal:
        family: 'Fira Code'

    bold:
        family: 'Fira Code'

    italic:
        family: 'Fira Code'

    size: 14.0

    # Offset is the extra space around each character. offset.y can be thought of
    # as modifying the linespacing, and offset.x as modifying the letter spacing.
    offset:
        x: 0
        y: 0

    # Glyph offset determines the locations of the glyphs within their cells with
    # the default being at the bottom. Increase the x offset to move the glyph to
    # the right, increase the y offset to move the glyph upward.
    glyph_offset:
        x: 0
        y: 0

    use_thin_strokes: true

# When true, bold text is drawn using the bright variant of colors.
draw_bold_text_with_bright_colors: true

# Use custom cursor colors. If true, display the cursor in the cursor.foreground
# and cursor.background colors, otherwise invert the colors of the cursor.
custom_cursor_colors: false

# Colors
colors:
    primary:
        background: '0x191724'
        foreground: '0xe0def4'
    cursor:
        text: '0x191724'
        cursor: '0x796268'
    vi_mode_cursor:
        text: '0x191724'
        cursor: '0x796268'
    line_indicator:
        foreground: None
        background: None
    selection:
        text: CellForeground
        background: '0x2A2738'
    normal:
        black: '0x6e6a86'
        red: '0xeb6f92'
        green: '0x9ccfd8'
        yellow: '0xf6c177'
        blue: '0x31748f'
        magenta: '0xc4a7e7'
        cyan: '0xebbcba'
        white: '0xe0def4'
    bright:
        black: '0x6e6a86'
        red: '0xeb6f92'
        green: '0x9ccfd8'
        yellow: '0xf6c177'
        blue: '0x31748f'
        magenta: '0xc4a7e7'
        cyan: '0xebbcba'
        white: '0xe0def4'
    # Indexed Colors
    #
    # The indexed colors include all colors from 16 to 256.
    # When these are not set, they're filled with sensible defaults.
    #
    # Example:
    #   `- { index: 16, color: '0xff00ff' }`
    #
    indexed_colors: []

# Background opacity
window.opacity: 1.0

# Key bindings
#   A full list with available key codes can be found here:
#   https://docs.rs/glutin/*/glutin/enum.VirtualKeyCode.html#variants
#
#   Instead of using the name of the keys, the `key` field also supports using
#   the scancode of the desired key. Scancodes have to be specified as a
#   decimal number.
#   This command will allow you to display the hex scancodes for certain keys:
#     `showkey --scancodes`
#
# Values for `mods`:
#   - Command
#   - Control
#   - Option
#   - Super
#   - Shift
#   - Alt
#
#   Multiple `mods` can be combined using `|` like this: `mods: Control|Shift`.
#   Whitespace and capitalization is relevant and must match the example.
#
# Values for `chars`:
#   The `chars` field writes the specified string to the terminal. This makes
#   it possible to pass escape sequences.
#   To find escape codes for bindings like `PageUp` ("\x1b[5~"), you can run
#   the command `showkey -a` outside of tmux.
#   Note that applications use terminfo to map escape sequences back to
#   keys. It is therefore required to update the terminfo when
#   changing an escape sequence.
#
# Values for `action`:
#   - Paste
#   - PasteSelection
#   - Copy
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollLineUp
#   - ScrollLineDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Quit
#   - ClearLogNotice
#   - SpawnNewInstance
#   - ToggleFullscreen
#   - None
#
# Values for `action` (macOS only):
#   - ToggleSimpleFullscreen: Enters fullscreen without occupying another space
#
# Values for `command`:
#   The `command` field must be a map containing a `program` string and
#   an `args` array of command line parameter strings.
#
#   Example:
#       `command: { program: "alacritty", args: ["-e", "vttest"] }`
#
# Values for `mode`:
#   - ~AppCursor
#   - AppCursor
#   - ~AppKeypad
#   - AppKeypad
#
key_bindings:
    - { key: V, mods: Command, action: Paste }
    - { key: C, mods: Command, action: Copy }
    - { key: Q, mods: Command, action: Quit }

      # shortcuts for tmux. the leader key is control-b (0x02)
    - { key: W, mods: Command, chars: "\x02&" } # close tab (kill)
    - { key: T, mods: Command, chars: "\x02c" } # new tab
    - { key: RBracket, mods: Command|Shift, chars: "\x02n" } # select next tab
    - { key: LBracket, mods: Command|Shift, chars: "\x02p" } # select previous tab
    - { key: RBracket, mods: Command, chars: "\x02o" } # select next pane
    - { key: LBracket, mods: Command, chars: "\x02;" } # select last (previously used) pane
    - { key: F, mods: Command, chars: "\x02/" } # search (upwards) (see tmux.conf)

mouse:
    # Click settings
    double_click: { threshold: 300 }
    triple_click: { threshold: 300 }

    # If this is `true`, the cursor is temporarily hidden when typing.
    hide_when_typing: true

selection:
    semantic_escape_chars: ',│`|:"'' ()[]{}<>'

    # When set to `true`, selected text will be copied to the primary clipboard.
    save_to_clipboard: false

# Mouse bindings
#
# Available fields:
# - mouse
# - action
# - mods (optional)
#
# Values for `mouse`:
# - Middle
# - Left
# - Right
# - Numeric identifier such as `5`
#
# All available `mods` and `action` values are documented in the key binding
# section.
mouse_bindings:
    - { mouse: Middle, action: PasteSelection }

cursor:
    # Cursor style
    #
    # Values for 'style':
    #   - ▇ Block
    #   - _ Underline
    #   - | Beam
    style: Block

    # If this is `true`, the cursor will be rendered as a hollow box when the
    # window is not focused.
    unfocused_hollow: true

dynamic_title: true

# Live config reload (changes require restart)
live_config_reload: true
